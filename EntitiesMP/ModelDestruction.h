/*
 * This file is generated by Entity Class Compiler, (c) CroTeam 1997-98
 */

#ifndef _EntitiesMP_ModelDestruction_INCLUDED
#define _EntitiesMP_ModelDestruction_INCLUDED 1
#include <EntitiesMP/ModelHolder2.h>
#include <EntitiesMP/ModelHolder3.h>
#include <EntitiesMP/BasicEffects.h>
#include <EntitiesMP/Debris.h>
#include <EntitiesMP/BloodSpray.h>
#include <EntitiesMP/SoundHolder.h>
#define EVENTCODE_ERangeModelDestruction 0x00d90000
class DECL_DLL ERangeModelDestruction : public CEntityEvent {
public:
ERangeModelDestruction();
CEntityEvent *MakeCopy(void);
BOOL CheckIDs(void);
SLONG GetSizeOf(void);
};
DECL_DLL inline void ClearToDefault(ERangeModelDestruction &e) { e = ERangeModelDestruction(); } ;
#define EVENTCODE_EModelDeath 0x00d90001
class DECL_DLL EModelDeath : public CEntityEvent {
public:
EModelDeath();
CEntityEvent *MakeCopy(void);
BOOL CheckIDs(void);
SLONG GetSizeOf(void);
};
DECL_DLL inline void ClearToDefault(EModelDeath &e) { e = EModelDeath(); } ;
extern DECL_DLL CEntityPropertyEnumType DestructionDebrisType_enum;
enum DestructionDebrisType {
  DDT_STONE = 1,
  DDT_WOOD = 2,
  DDT_PALM = 3,
  DDT_CHILDREN_CUSTOM = 4,
};
DECL_DLL inline void ClearToDefault(DestructionDebrisType &e) { e = (DestructionDebrisType)0; } ;
extern "C" DECL_DLL CDLLEntityClass CModelDestruction_DLLClass;
class CModelDestruction : public CEntity {
public:
virtual const CTString &GetName(void) const { return m_strName; };
virtual BOOL IsTargetable(void) const { return TRUE; };
virtual BOOL IsImportant(void) const { return TRUE; };
  DECL_DLL virtual void SetDefaultProperties(void);
  CTString m_strName;
  CTString m_strDescription;
  CEntityPointer m_penModel0;
  CEntityPointer m_penModel1;
  CEntityPointer m_penModel2;
  CEntityPointer m_penModel3;
  CEntityPointer m_penModel4;
  FLOAT m_fHealth;
  enum DestructionDebrisType m_ddtDebris;
  INDEX m_ctDebris;
  FLOAT m_fDebrisSize;
  enum EntityInfoBodyType m_eibtBodyType;
  enum SprayParticlesType m_sptType;
  FLOAT m_fParticleSize;
  BOOL m_bRequireExplosion;
  FLOAT m_fDebrisLaunchPower;
  enum DebrisParticlesType m_dptParticles;
  enum BasicEffectType m_betStain;
  FLOAT m_fLaunchCone;
  FLOAT m_fRndRotH;
  FLOAT m_fRndRotP;
  FLOAT m_fRndRotB;
  FLOAT m_fParticleLaunchPower;
  COLOR m_colParticles;
  ANIMATION m_iStartAnim;
  BOOL m_bDebrisImmaterialASAP;
  CTString m_strStartAnim;
  INDEX m_ctDustFall;
  FLOAT m_fMinDustFallHeightRatio;
  FLOAT m_fMaxDustFallHeightRatio;
  FLOAT m_fDustStretch;
  FLOAT m_fDebrisDustRandom;
  FLOAT m_fDebrisDustStretch;
  CEntityPointer m_penShake;
   
#line 99 "E:/USA/EntitiesMP/ModelDestruction.es"
void Precache(void);
   
#line 123 "E:/USA/EntitiesMP/ModelDestruction.es"
CAnimData * GetAnimData(SLONG slPropertyOffset);
   
#line 137 "E:/USA/EntitiesMP/ModelDestruction.es"
const CTString & GetDescription(void)const;
   
#line 150 "E:/USA/EntitiesMP/ModelDestruction.es"
void CheckOneModelTarget(CEntityPointer & pen);
   
#line 159 "E:/USA/EntitiesMP/ModelDestruction.es"
CEntity * GetNextPhase(void);
   
#line 174 "E:/USA/EntitiesMP/ModelDestruction.es"
INDEX GetModelsCount(void)const;
   
#line 185 "E:/USA/EntitiesMP/ModelDestruction.es"
CEntity * GetModel(INDEX iModel);
   
#line 192 "E:/USA/EntitiesMP/ModelDestruction.es"
void SpawnSoundHolder(DestructionDebrisType ddtDebris,CPlacement3D plModel);
   
#line 225 "E:/USA/EntitiesMP/ModelDestruction.es"
void SpawnDebris(CEntity * penDestroyed);
#define  STATE_CModelDestruction_Main 1
  BOOL 
#line 428 "E:/USA/EntitiesMP/ModelDestruction.es"
Main(const CEntityEvent &__eeInput);
};
#endif // _EntitiesMP_ModelDestruction_INCLUDED
